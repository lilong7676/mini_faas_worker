import*as e from"../../../core/i18n/i18n.js";import*as t from"../../../core/common/common.js";import*as i from"../../../panels/network/forward/forward.js";import*as r from"../helpers/helpers.js";import*as s from"../icon_button/icon_button.js";import*as o from"../../lit-html/lit-html.js";import*as n from"../render_coordinator/render_coordinator.js";const a=new CSSStyleSheet;a.replaceSync(":host{display:inline-block;white-space:nowrap;color:inherit;font-size:inherit;font-family:inherit}devtools-icon{vertical-align:middle}.link{cursor:pointer}.link span{color:var(--color-link)}\n/*# sourceURL=requestLinkIcon.css */\n");const l={clickToShowRequestInTheNetwork:"Click to open the network panel and show request for URL: {url}",requestUnavailableInTheNetwork:"Request unavailable in the network panel, try reloading the inspected page",shortenedURL:"Shortened URL"},h=e.i18n.registerUIStrings("ui/components/request_link_icon/RequestLinkIcon.ts",l),c=e.i18n.getLocalizedString.bind(void 0,h),d=e=>(/[^/]+$/.exec(e)||/[^/]+\/$/.exec(e)||[""])[0],u=n.RenderCoordinator.RenderCoordinator.instance();class q extends HTMLElement{static litTagName=o.literal`devtools-request-link-icon`;#e=this.attachShadow({mode:"open"});#t;#i;#r;#s;#o=!1;#n;#a;#l;#h=t.Revealer.reveal;#c=Promise.resolve(void 0);set data(e){this.#t=e.linkToPreflight,this.#i=e.request,e.affectedRequest&&(this.#a={...e.affectedRequest}),this.#r=e.highlightHeader,this.#n=e.networkTab,this.#s=e.requestResolver,this.#o=e.displayURL??!1,this.#l=e.additionalOnClickAction,e.revealOverride&&(this.#h=e.revealOverride),!this.#i&&e.affectedRequest&&(this.#c=this.resolveRequest(e.affectedRequest.requestId)),this.render()}connectedCallback(){this.#e.adoptedStyleSheets=[a]}resolveRequest(e){if(!this.#s)throw new Error("A `RequestResolver` must be provided if an `affectedRequest` is provided.");return this.#s.waitFor(e).then((e=>{this.#i=e})).catch((()=>{this.#i=null}))}get data(){return{linkToPreflight:this.#t,request:this.#i,affectedRequest:this.#a,highlightHeader:this.#r,networkTab:this.#n,requestResolver:this.#s,displayURL:this.#o,additionalOnClickAction:this.#l,revealOverride:this.#h!==t.Revealer.reveal?this.#h:void 0}}iconColor(){return this.#i?"--color-link":"--issue-color-yellow"}iconData(){return{iconName:"network_panel_icon",color:`var(${this.iconColor()})`,width:"16px",height:"16px"}}handleClick(e){if(0!==e.button)return;const t=this.#t?this.#i?.preflightRequest():this.#i;if(t){if(this.#r){const e=i.UIRequestLocation.UIRequestLocation.header(t,this.#r.section,this.#r.name);this.#h(e)}else{const e=i.UIRequestLocation.UIRequestLocation.tab(t,this.#n??i.UIRequestLocation.UIRequestTabs.Headers);this.#h(e)}this.#l?.()}}getTooltip(){return this.#i?c(l.clickToShowRequestInTheNetwork,{url:this.#i.url()}):c(l.requestUnavailableInTheNetwork)}getUrlForDisplaying(){return this.#i?this.#i.url():this.#a?.url}maybeRenderURL(){if(!this.#o)return o.nothing;const e=this.getUrlForDisplaying();if(!e)return o.nothing;const t=d(e);return o.html`<span aria-label="${c(l.shortenedURL)}" title="${e}">${t}</span>`}render(){return u.write((()=>{o.render(o.html` ${o.Directives.until(this.#c.then((()=>this.renderComponent())),this.renderComponent())} `,this.#e,{host:this})}))}renderComponent(){return o.html` <span class="${o.Directives.classMap({link:Boolean(this.#i)})}" tabindex="0" @click="${this.handleClick}"> <${s.Icon.Icon.litTagName} .data="${this.iconData()}" title="${this.getTooltip()}"></${s.Icon.Icon.litTagName}> ${this.maybeRenderURL()} </span>`}}r.CustomElements.defineComponent("devtools-request-link-icon",q);var R=Object.freeze({__proto__:null,extractShortPath:d,RequestLinkIcon:q});export{R as RequestLinkIcon};

import*as e from"../helpers/helpers.js";import*as t from"../icon_button/icon_button.js";import*as s from"../../lit-html/lit-html.js";import"../../legacy/legacy.js";const o=new CSSStyleSheet;o.replaceSync(".markdown-image{display:block}\n/*# sourceURL=markdownImage.css */\n");const a=new Map([]),n=e=>{const t=a.get(e);if(!t)throw new Error(`Markdown image with key '${e}' is not available, please check MarkdownImagesMap.ts`);return t};var i=Object.freeze({__proto__:null,markdownImages:a,getMarkdownImage:n});class r extends HTMLElement{static litTagName=s.literal`devtools-markdown-image`;#e=this.attachShadow({mode:"open"});#t;#s;constructor(){super()}connectedCallback(){this.#e.adoptedStyleSheets=[o]}set data(e){const{key:t,title:s}=e,o=n(t);this.#t=o,this.#s=s,this.render()}getIconComponent(){if(!this.#t)return s.html``;const{src:e,color:o,width:a="100%",height:n="100%"}=this.#t;return s.html` <${t.Icon.Icon.litTagName} .data="${{iconPath:e,color:o,width:a,height:n}}"></${t.Icon.Icon.litTagName}> `}getImageComponent(){if(!this.#t)return s.html``;const{src:e,width:t="100%",height:o="100%"}=this.#t;return s.html` <img class="markdown-image" src="${e}" alt="${this.#s}" width="${t}" height="${o}/"> `}render(){if(!this.#t)return;const{isIcon:e}=this.#t,t=e?this.getIconComponent():this.getImageComponent();s.render(t,this.#e,{host:this})}}e.CustomElements.defineComponent("devtools-markdown-image",r);var l=Object.freeze({__proto__:null,MarkdownImage:r});const c=new CSSStyleSheet;c.replaceSync(".devtools-link{color:var(--color-link);text-decoration:none}.devtools-link:hover{text-decoration:underline}\n/*# sourceURL=markdownLink.css */\n");const d=new Map([["issuesContrastWCAG21AA","https://www.w3.org/TR/WCAG21/#contrast-minimum"],["issuesContrastWCAG21AAA","https://www.w3.org/TR/WCAG21/#contrast-enhanced"],["issuesContrastSuggestColor","https://developers.google.com/web/updates/2020/08/devtools#accessible-color"],["issuesCSPSetStrict","https://web.dev/strict-csp"],["issuesCSPWhyStrictOverAllowlist","https://web.dev/strict-csp/#why-a-strict-csp-is-recommended-over-allowlist-csps"],["issueCorsPreflightRequest","https://web.dev/cross-origin-resource-sharing/#preflight-requests-for-complex-http-calls"],["issueQuirksModeDoctype","https://web.dev/doctype/"],["sameSiteAndSameOrigin","https://web.dev/same-site-same-origin/"]]),m=e=>{const t=d.get(e);if(!t)throw new Error(`Markdown link with key '${e}' is not available, please check MarkdownLinksMap.ts`);return t};var h=Object.freeze({__proto__:null,markdownLinks:d,getMarkdownLink:m});class p extends HTMLElement{static litTagName=s.literal`devtools-markdown-link`;#e=this.attachShadow({mode:"open"});#o="";#a="";connectedCallback(){this.#e.adoptedStyleSheets=[c]}set data(e){const{key:t,title:s}=e,o=m(t);this.#o=s,this.#a=o,this.render()}render(){const e=s.html` <x-link class="devtools-link" href="${this.#a}">${this.#o}</x-link> `;s.render(e,this.#e,{host:this})}}e.CustomElements.defineComponent("devtools-markdown-link",p);var g=Object.freeze({__proto__:null,MarkdownLink:p});const w=new CSSStyleSheet;w.replaceSync('.message{line-height:20px;font-size:14px;color:var(--color-text-secondary);margin-bottom:4px;user-select:text}.message p{margin-bottom:16px;margin-block-start:2px}.message ul{list-style-type:none;list-style-position:inside;padding-inline-start:0}.message li{margin-top:8px;display:list-item}.message li::before{content:"â†’";-webkit-mask-image:none;padding-right:5px;position:relative;top:-1px}.message code{color:var(--color-text-primary);font-size:12px;user-select:text;cursor:text;background:var(--color-background-elevation-1)}\n/*# sourceURL=markdownView.css */\n');const k=s.html,u=s.render;class v extends HTMLElement{static litTagName=s.literal`devtools-markdown-view`;#e=this.attachShadow({mode:"open"});#n=[];connectedCallback(){this.#e.adoptedStyleSheets=[w]}set data(e){this.#n=e.tokens,this.update()}update(){this.render()}render(){u(k` <div class="message"> ${this.#n.map(b)} </div> `,this.#e)}}e.CustomElements.defineComponent("devtools-markdown-view",v);const S=e=>e.tokens.map(b),x=e=>{const t=new Map([["&amp;","&"],["&lt;","<"],["&gt;",">"],["&quot;",'"'],["&#39;","'"]]);return e.replace(/&(amp|lt|gt|quot|#39);/g,(e=>{const s=t.get(e);return s||e}))},y=new Map([["paragraph",e=>k`<p>${S(e)}`],["list",e=>k`<ul>${e.items.map(b)}</ul>`],["list_item",e=>k`<li>${S(e)}`],["text",e=>e.tokens&&e.tokens.length>0?k`${S(e)}`:k`${x(e.text)}`],["codespan",e=>k`<code>${x(e.text)}</code>`],["space",()=>k``],["link",e=>k`<${p.litTagName} .data="${{key:e.href,title:e.text}}"></${p.litTagName}>`],["image",e=>k`<${r.litTagName} .data="${{key:e.href,title:e.text}}"></${r.litTagName}>`]]),b=e=>{const t=y.get(e.type);if(!t)throw new Error(`Markdown token type '${e.type}' not supported.`);return t(e)};var C=Object.freeze({__proto__:null,MarkdownView:v,renderToken:b});export{l as MarkdownImage,i as MarkdownImagesMap,g as MarkdownLink,h as MarkdownLinksMap,C as MarkdownView};

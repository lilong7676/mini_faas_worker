import*as e from"../../../core/common/common.js";import*as t from"../../lit-html/lit-html.js";import*as i from"../../../core/i18n/i18n.js";import*as n from"../helpers/helpers.js";import*as r from"../icon_button/icon_button.js";const o=new CSSStyleSheet;o.replaceSync(".link-icon{vertical-align:sub;margin-right:.5ch}.link{padding:var(--issue-link-padding,4px 0 0 0);text-decoration:var(--issue-link-text-decoration,underline);cursor:pointer;font-size:var(--issue-link-font-size, 14px);color:var(--color-link);border:none;background:0 0;font-family:inherit}.link:focus:not(:focus-visible){outline:0}.pending-link{opacity:75%;pointer-events:none;cursor:default;text-decoration:none}.disabled-link{pointer-events:none;cursor:default;text-decoration:none}\n/*# sourceURL=surveyLink.css */\n");const s={openingSurvey:"Opening survey â€¦",thankYouForYourFeedback:"Thank you for your feedback",anErrorOccurredWithTheSurvey:"An error occurred with the survey"},a=i.i18n.registerUIStrings("ui/components/survey_link/SurveyLink.ts",s),h=i.i18n.getLocalizedString.bind(void 0,a);class c extends HTMLElement{static litTagName=t.literal`devtools-survey-link`;#e=this.attachShadow({mode:"open"});#t="";#i=e.UIString.LocalizedEmptyString;#n=()=>{};#r=()=>{};#o="Checking";connectedCallback(){this.#e.adoptedStyleSheets=[o]}set data(e){this.#t=e.trigger,this.#i=e.promptText,this.#n=e.canShowSurvey,this.#r=e.showSurvey,this.checkSurvey()}checkSurvey(){this.#o="Checking",this.#n(this.#t,(({canShowSurvey:e})=>{this.#o=e?"ShowLink":"DontShowLink",this.render()}))}sendSurvey(){this.#o="Sending",this.render(),this.#r(this.#t,(({surveyShown:e})=>{this.#o=e?"SurveyShown":"Failed",this.render()}))}render(){if("Checking"===this.#o||"DontShowLink"===this.#o)return;let e=this.#i;"Sending"===this.#o?e=h(s.openingSurvey):"SurveyShown"===this.#o?e=h(s.thankYouForYourFeedback):"Failed"===this.#o&&(e=h(s.anErrorOccurredWithTheSurvey));let i="";"Sending"===this.#o?i="pending-link":"Failed"!==this.#o&&"SurveyShown"!==this.#o||(i="disabled-link");const n="ShowLink"!==this.#o,o=t.html` <button class="link ${i}" tabindex="${n?"-1":"0"}" .disabled="${n}" aria-disabled="${n}" @click="${this.sendSurvey}"> <${r.Icon.Icon.litTagName} class="link-icon" .data="${{iconName:"feedback_button_icon",color:"var(--color-link)",width:"var(--issue-link-icon-size, 16px)",height:"var(--issue-link-icon-size, 16px)"}}"></${r.Icon.Icon.litTagName}>${e} </button> `;t.render(o,this.#e,{host:this})}}n.CustomElements.defineComponent("devtools-survey-link",c);var l=Object.freeze({__proto__:null,SurveyLink:c});export{l as SurveyLink};

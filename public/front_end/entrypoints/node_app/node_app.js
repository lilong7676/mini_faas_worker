import"../shell/shell.js";import*as e from"../../core/i18n/i18n.js";import*as t from"../../ui/legacy/legacy.js";import*as n from"../../core/common/common.js";import*as o from"../../core/root/root.js";import*as s from"../main/main.js";import*as i from"../../core/host/host.js";import*as r from"../../ui/legacy/components/utils/utils.js";import*as a from"../../core/sdk/sdk.js";const c={profiler:"Profiler",showProfiler:"Show Profiler",startStopRecording:"Start/stop recording"},d=e.i18n.registerUIStrings("panels/js_profiler/js_profiler-meta.ts",c),l=e.i18n.getLazilyComputedLocalizedString.bind(void 0,d);let g;async function h(){return g||(g=await import("../../panels/profiler/profiler.js")),g}t.ViewManager.registerViewExtension({location:"panel",id:"js_profiler",title:l(c.profiler),commandPrompt:l(c.showProfiler),order:65,loadView:async()=>(await h()).ProfilesPanel.JSProfilerPanel.instance()}),t.ActionRegistration.registerActionExtension({actionId:"profiler.js-toggle-recording",category:t.ActionRegistration.ActionCategory.JAVASCRIPT_PROFILER,title:l(c.startStopRecording),iconClass:"largeicon-start-recording",toggleable:!0,toggledIconClass:"largeicon-stop-recording",toggleWithRedColor:!0,contextTypes:()=>void 0===g?[]:(e=>[e.ProfilesPanel.JSProfilerPanel])(g),loadActionDelegate:async()=>(await h()).ProfilesPanel.JSProfilerPanel.instance(),bindings:[{platform:"windows,linux",shortcut:"Ctrl+E"},{platform:"mac",shortcut:"Meta+E"}]});const p={main:"Main",nodejsS:"Node.js: {PH1}"},w=e.i18n.registerUIStrings("entrypoints/node_app/NodeMain.ts",p),v=e.i18n.getLocalizedString.bind(void 0,w);let m;class f{static instance(e={forceNew:null}){const{forceNew:t}=e;return m&&!t||(m=new f),m}async run(){i.userMetrics.actionTaken(i.UserMetrics.Action.ConnectToNodeJSFromFrontend),a.Connections.initMainConnection((async()=>{a.TargetManager.TargetManager.instance().createTarget("main",v(p.main),a.Target.Type.Browser,null).setInspectedURL("Node.js")}),r.TargetDetachedDialog.TargetDetachedDialog.webSocketConnectionLost)}}class u extends a.SDKModel.SDKModel{targetManager;parentTarget;targetAgent;childTargets;childConnections;constructor(e){super(e),this.targetManager=e.targetManager(),this.parentTarget=e,this.targetAgent=e.targetAgent(),this.childTargets=new Map,this.childConnections=new Map,e.registerTargetDispatcher(this),this.targetAgent.invoke_setDiscoverTargets({discover:!0}),i.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(i.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged,this.devicesDiscoveryConfigChanged,this),i.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!1),i.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!0)}devicesDiscoveryConfigChanged({data:e}){const t=[];for(const n of e.networkDiscoveryConfig){const e=n.split(":"),o=parseInt(e[1],10);e[0]&&o&&t.push({host:e[0],port:o})}this.targetAgent.invoke_setRemoteLocations({locations:t})}dispose(){i.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(i.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged,this.devicesDiscoveryConfigChanged,this);for(const e of this.childTargets.keys())this.detachedFromTarget({sessionId:e})}targetCreated({targetInfo:e}){"node"!==e.type||e.attached||this.targetAgent.invoke_attachToTarget({targetId:e.targetId,flatten:!1})}targetInfoChanged(e){}targetDestroyed(e){}attachedToTarget({sessionId:e,targetInfo:t}){const n=v(p.nodejsS,{PH1:t.url}),o=new y(this.targetAgent,e);this.childConnections.set(e,o);const s=this.targetManager.createTarget(t.targetId,n,a.Target.Type.Node,this.parentTarget,void 0,void 0,o);this.childTargets.set(e,s),s.runtimeAgent().invoke_runIfWaitingForDebugger()}detachedFromTarget({sessionId:e}){const t=this.childTargets.get(e);t&&t.dispose("target terminated"),this.childTargets.delete(e),this.childConnections.delete(e)}receivedMessageFromTarget({sessionId:e,message:t}){const n=this.childConnections.get(e),o=n?n.onMessage:null;o&&o.call(null,t)}targetCrashed(e){}}class y{targetAgent;sessionId;onMessage;onDisconnect;constructor(e,t){this.targetAgent=e,this.sessionId=t,this.onMessage=null,this.onDisconnect=null}setOnMessage(e){this.onMessage=e}setOnDisconnect(e){this.onDisconnect=e}sendRawMessage(e){this.targetAgent.invoke_sendMessageToTarget({message:e,sessionId:this.sessionId})}async disconnect(){this.onDisconnect&&this.onDisconnect.call(null,"force disconnect"),this.onDisconnect=null,this.onMessage=null,await this.targetAgent.invoke_detachFromTarget({sessionId:this.sessionId})}}a.SDKModel.SDKModel.register(u,{capabilities:a.Target.Capability.Target,autostart:!0});const C=new CSSStyleSheet;C.replaceSync(".add-network-target-button{margin:10px 25px;align-self:center}.network-discovery-list{flex:none;max-width:600px;max-height:202px;margin:20px 0 5px}.network-discovery-list-empty{flex:auto;height:30px;display:flex;align-items:center;justify-content:center}.network-discovery-list-item{padding:3px 5px;height:30px;display:flex;align-items:center;position:relative;flex:auto 1 1}.network-discovery-value{flex:3 1 0}.list-item .network-discovery-value{white-space:nowrap;text-overflow:ellipsis;user-select:none;color:var(--color-text-primary);overflow:hidden}.network-discovery-edit-row{flex:none;display:flex;flex-direction:row;margin:6px 5px;align-items:center}.network-discovery-edit-row input{width:100%;text-align:inherit}.network-discovery-footer{margin:0;overflow:hidden;max-width:500px}.network-discovery-footer>*{white-space:pre-wrap}.node-panel{align-items:center;justify-content:flex-start;overflow-y:auto}.network-discovery-view{min-width:400px;text-align:left}:host-context(.node-frontend) .network-discovery-list-empty{height:40px}:host-context(.node-frontend) .network-discovery-list-item{padding:3px 15px;height:40px}.node-panel-center{max-width:600px;padding-top:50px;text-align:center}.node-panel-logo{width:400px;margin-bottom:50px}:host-context(.node-frontend) .network-discovery-edit-row input{height:30px;padding-left:5px}:host-context(.node-frontend) .network-discovery-edit-row{margin:6px 9px}\n/*# sourceURL=nodeConnectionsPanel.css */\n");const k={nodejsDebuggingGuide:"Node.js debugging guide",specifyNetworkEndpointAnd:"Specify network endpoint and DevTools will connect to it automatically. Read {PH1} to learn more.",noConnectionsSpecified:"No connections specified",addConnection:"Add connection",networkAddressEgLocalhost:"Network address (e.g. localhost:9229)"},I=e.i18n.registerUIStrings("entrypoints/node_app/NodeConnectionsPanel.ts",k),x=e.i18n.getLocalizedString.bind(void 0,I);let D;class S extends t.Panel.Panel{config;networkDiscoveryView;constructor(){super("node-connection"),this.contentElement.classList.add("node-panel");const e=this.contentElement.createChild("div","node-panel-center");e.createChild("img","node-panel-logo").src="https://nodejs.org/static/images/logos/nodejs-new-pantone-black.svg",i.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(i.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged,this.devicesDiscoveryConfigChanged,this),this.contentElement.tabIndex=0,this.setDefaultFocusedElement(this.contentElement),i.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!1),i.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(!0),this.networkDiscoveryView=new T((e=>{this.config.networkDiscoveryConfig=e,i.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesDiscoveryConfig(this.config)})),this.networkDiscoveryView.show(e)}static instance(e={forceNew:null}){const{forceNew:t}=e;return D&&!t||(D=new S),D}devicesDiscoveryConfigChanged({data:e}){this.config=e,this.networkDiscoveryView.discoveryConfigChanged(this.config.networkDiscoveryConfig)}wasShown(){super.wasShown(),this.registerCSSFiles([C])}}class T extends t.Widget.VBox{callback;list;editor;networkDiscoveryConfig;constructor(n){super(),this.callback=n,this.element.classList.add("network-discovery-view");const o=this.element.createChild("div","network-discovery-footer"),s=t.XLink.XLink.create("https://nodejs.org/en/docs/inspector/",x(k.nodejsDebuggingGuide));o.appendChild(e.i18n.getFormatLocalizedString(I,k.specifyNetworkEndpointAnd,{PH1:s})),this.list=new t.ListWidget.ListWidget(this),this.list.element.classList.add("network-discovery-list");const i=document.createElement("div");i.classList.add("network-discovery-list-empty"),i.textContent=x(k.noConnectionsSpecified),this.list.setEmptyPlaceholder(i),this.list.show(this.element),this.editor=null;const r=t.UIUtils.createTextButton(x(k.addConnection),this.addNetworkTargetButtonClicked.bind(this),"add-network-target-button",!0);this.element.appendChild(r),this.networkDiscoveryConfig=[],this.element.classList.add("node-frontend")}update(){const e=this.networkDiscoveryConfig.map((e=>e.address));this.callback.call(null,e)}addNetworkTargetButtonClicked(){this.list.addNewItem(this.networkDiscoveryConfig.length,{address:"",port:""})}discoveryConfigChanged(e){this.networkDiscoveryConfig=[],this.list.clear();for(const t of e){const e={address:t,port:""};this.networkDiscoveryConfig.push(e),this.list.appendItem(e,!0)}}renderItem(e,t){const n=document.createElement("div");return n.classList.add("network-discovery-list-item"),n.createChild("div","network-discovery-value network-discovery-address").textContent=e.address,n}removeItemRequested(e,t){this.networkDiscoveryConfig.splice(t,1),this.list.removeItem(t),this.update()}commitEdit(e,t,n){e.address=t.control("address").value.trim(),n&&this.networkDiscoveryConfig.push(e),this.update()}beginEdit(e){const t=this.createEditor();return t.control("address").value=e.address,t}createEditor(){if(this.editor)return this.editor;const e=new t.ListWidget.Editor;this.editor=e;const n=e.contentElement().createChild("div","network-discovery-edit-row"),o=e.createInput("address","text",x(k.networkAddressEgLocalhost),(function(e,t,n){const o=n.value.trim().match(/^([a-zA-Z0-9\.\-_]+):(\d+)$/);if(!o)return{valid:!1,errorMessage:void 0};return{valid:parseInt(o[2],10)<=65535,errorMessage:void 0}}));return n.createChild("div","network-discovery-value network-discovery-address").appendChild(o),e}wasShown(){super.wasShown(),this.list.registerCSSFiles([C])}}const E={connection:"Connection",node:"node",showConnection:"Show Connection",networkTitle:"Node",showNode:"Node"},M=e.i18n.registerUIStrings("entrypoints/node_app/node_app.ts",E),P=e.i18n.getLazilyComputedLocalizedString.bind(void 0,M);let F;t.ViewManager.registerViewExtension({location:"panel",id:"node-connection",title:P(E.connection),commandPrompt:P(E.showConnection),order:0,loadView:async()=>S.instance(),tags:[P(E.node)]}),t.ViewManager.registerViewExtension({location:"navigator-view",id:"navigator-network",title:P(E.networkTitle),commandPrompt:P(E.showNode),order:2,persistence:"permanent",loadView:async()=>(await async function(){return F||(F=await import("../../panels/sources/sources.js")),F}()).SourcesNavigator.NetworkNavigatorView.instance()});const b=o.Runtime.Runtime.instance({forceNew:!0,moduleDescriptors:[]});self.runtime=b,n.Runnable.registerEarlyInitializationRunnable(f.instance),new s.MainImpl.MainImpl,o.Runtime.appStartedPromiseCallback();
